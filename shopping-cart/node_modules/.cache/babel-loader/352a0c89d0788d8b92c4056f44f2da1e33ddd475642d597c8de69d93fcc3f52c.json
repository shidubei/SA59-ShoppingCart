{"ast":null,"code":"import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","map":{"version":3,"names":["gridVisibleColumnDefinitionsSelector","useGridSelector","useGridRootProps","gridColumnGroupsHeaderMaxDepthSelector","gridPinnedRowsCountSelector","useGridPrivateApiContext","isMultipleRowSelectionEnabled","gridExpandedRowCountSelector","useGridAriaAttributes","apiRef","rootProps","visibleColumns","accessibleRowCount","headerGroupingMaxDepth","pinnedRowsCount","role","length"],"sources":["D:/Documents/shopping-cart-react/shopping-cart/node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js"],"sourcesContent":["import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};"],"mappings":"AAAA,SAASA,oCAAoC,QAAQ,4CAA4C;AACjG,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,sCAAsC,QAAQ,wDAAwD;AAC/G,SAASC,2BAA2B,QAAQ,sCAAsC;AAClF,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,6BAA6B,QAAQ,mCAAmC;AACjF,SAASC,4BAA4B,QAAQ,0CAA0C;AACvF,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EACzC,MAAMC,MAAM,GAAGJ,wBAAwB,CAAC,CAAC;EACzC,MAAMK,SAAS,GAAGR,gBAAgB,CAAC,CAAC;EACpC,MAAMS,cAAc,GAAGV,eAAe,CAACQ,MAAM,EAAET,oCAAoC,CAAC;EACpF,MAAMY,kBAAkB,GAAGX,eAAe,CAACQ,MAAM,EAAEF,4BAA4B,CAAC;EAChF,MAAMM,sBAAsB,GAAGZ,eAAe,CAACQ,MAAM,EAAEN,sCAAsC,CAAC;EAC9F,MAAMW,eAAe,GAAGb,eAAe,CAACQ,MAAM,EAAEL,2BAA2B,CAAC;EAC5E,OAAO;IACLW,IAAI,EAAE,MAAM;IACZ,eAAe,EAAEJ,cAAc,CAACK,MAAM;IACtC,eAAe,EAAEH,sBAAsB,GAAG,CAAC,GAAGC,eAAe,GAAGF,kBAAkB;IAClF,sBAAsB,EAAEN,6BAA6B,CAACI,SAAS;EACjE,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}