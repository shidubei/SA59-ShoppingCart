{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\shopping-cart-react\\\\shopping-cart\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Appbar from './components/Appbar.js'; // Import your AppBar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Manage the login state\n  const userData = {\n    shoppingCartItems: 3 // Example user data for the shopping cart\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Appbar, {\n      isLoggedIn: isLoggedIn,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLoggedIn(!isLoggedIn),\n      children: \"Toggle Login State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Appbar","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userData","shoppingCartItems","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Documents/shopping-cart-react/shopping-cart/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Appbar from './components/Appbar.js'; // Import your AppBar component\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Manage the login state\n  const userData = {\n    shoppingCartItems: 3, // Example user data for the shopping cart\n  };\n\n  return (\n    <div>\n      {/* Pass isLoggedIn and userData as props */}\n      <Appbar isLoggedIn={isLoggedIn} userData={userData} />\n      \n      {/* Example button to toggle login state for testing */}\n      <button onClick={() => setIsLoggedIn(!isLoggedIn)}>\n        Toggle Login State\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAMQ,QAAQ,GAAG;IACfC,iBAAiB,EAAE,CAAC,CAAE;EACxB,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBAEEP,OAAA,CAACF,MAAM;MAACK,UAAU,EAAEA,UAAW;MAACE,QAAQ,EAAEA;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGtDX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMR,aAAa,CAAC,CAACD,UAAU,CAAE;MAAAI,QAAA,EAAC;IAEnD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACT,EAAA,CAjBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}