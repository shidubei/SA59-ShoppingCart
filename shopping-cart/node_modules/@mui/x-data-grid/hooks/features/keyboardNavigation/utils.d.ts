import * as React from 'react';
import { GridColDef, GridRowEntry, GridRowId } from '../../../models';
import { GridApiCommunity } from '../../../models/api/gridApiCommunity';
export declare function enrichPageRowsWithPinnedRows(apiRef: React.MutableRefObject<GridApiCommunity>, rows: GridRowEntry[]): GridRowEntry<import("../../..").GridValidRowModel>[];
export declare const getLeftColumnIndex: ({ currentColIndex, firstColIndex, lastColIndex, isRtl, }: {
    currentColIndex: number;
    firstColIndex: number;
    lastColIndex: number;
    isRtl: boolean;
}) => number | null;
export declare const getRightColumnIndex: ({ currentColIndex, firstColIndex, lastColIndex, isRtl, }: {
    currentColIndex: number;
    firstColIndex: number;
    lastColIndex: number;
    isRtl: boolean;
}) => number | null;
export declare function findNonRowSpannedCell(apiRef: React.MutableRefObject<GridApiCommunity>, rowId: GridRowId, field: GridColDef['field'], rowSpanScanDirection: 'up' | 'down'): GridRowId;
