import { GridStateCommunity } from '../../../models/gridStateCommunity';
export declare const gridRowCountSelector: import("../../..").OutputSelector<GridStateCommunity, number>;
export declare const gridRowsLoadingSelector: import("../../..").OutputSelector<GridStateCommunity, boolean | undefined>;
export declare const gridTopLevelRowCountSelector: import("../../..").OutputSelector<GridStateCommunity, number>;
export declare const gridRowsLookupSelector: import("../../..").OutputSelector<GridStateCommunity, import("./gridRowsInterfaces").GridRowIdToModelLookup<import("../../..").GridValidRowModel>>;
export declare const gridRowsDataRowIdToIdLookupSelector: import("../../..").OutputSelector<GridStateCommunity, import("./gridRowsInterfaces").GridRowIdToIdLookup>;
export declare const gridRowTreeSelector: import("../../..").OutputSelector<GridStateCommunity, import("../../..").GridRowTreeConfig>;
export declare const gridRowGroupsToFetchSelector: import("../../..").OutputSelector<GridStateCommunity, import("../../..").GridRowId[] | undefined>;
export declare const gridRowGroupingNameSelector: import("../../..").OutputSelector<GridStateCommunity, string>;
export declare const gridRowTreeDepthsSelector: import("../../..").OutputSelector<GridStateCommunity, import("./gridRowsInterfaces").GridTreeDepths>;
export declare const gridRowMaximumTreeDepthSelector: import("../../..").OutputSelector<GridStateCommunity, number>;
export declare const gridDataRowIdsSelector: import("../../..").OutputSelector<GridStateCommunity, import("../../..").GridRowId[]>;
/**
 * @ignore - do not document.
 */
export declare const gridAdditionalRowGroupsSelector: import("../../..").OutputSelector<GridStateCommunity, {
    pinnedRows?: import("./gridRowsInterfaces").GridPinnedRowsState;
} | undefined>;
/**
 * @ignore - do not document.
 */
export declare const gridPinnedRowsSelector: import("../../..").OutputSelector<GridStateCommunity, {
    bottom: {
        id: import("../../..").GridRowId;
        model: import("../../..").GridValidRowModel;
    }[];
    top: {
        id: import("../../..").GridRowId;
        model: import("../../..").GridValidRowModel;
    }[];
}>;
/**
 * @ignore - do not document.
 */
export declare const gridPinnedRowsCountSelector: import("../../..").OutputSelector<GridStateCommunity, number>;
